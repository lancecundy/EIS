base.path <- '/extra/agalvao/eis_nielsen'
# We have data from 2004 to 2017
Years <- seq(2004, 2017)
ii <- 1
Year <- Years[ii]
panelistsFileName <- file.path(base.path, paste0('nielsen_extracts/HMS/', Year, "/Annual_Files/panelists_", Year, ".tsv")
}
panelistsFileName <- file.path(base.path, paste0('nielsen_extracts/HMS/', Year, "/Annual_Files/panelists_", Year, ".tsv"))
panelistsFileName
id <- c(1, 2, 3)
mtcars
library(tidyverse)
head(mtcars)
cols <- c('mpg', 'cyl')
select(mtcars, cols)
c(tripsCols, panelistscols)
# These are the columns we want to return from each dataset
panelistsCols <- c('household_code', 'panel_year', 'projection_factor', 'projection_factor_magnet', 'household_income', 'household_size', 'type_of_residence', 'male_head_age', 'female_head_age', 'male_head_education', 'female_head_education', 'male_head_occupation', 'female_head_occupation', 'male_head_employment', 'female_head_employment', 'marital_status', 'race', 'hispanic_origin', 'fips_state_descr')
tripsCols <- c('trip_code_uc', 'household_code', 'retailer_code', 'purchase_date', 'panel_year', 'total_spent')
c(tripsCols, panelistscols)
c(tripsCols, panelistsCols)
unique(c(tripsCols, panelistsCols))
library(tidyverse)
# Read in Dataset
Trips4 <- read_csv('UseData/preliminary_iv_estimation_ne.csv')
getwd()
setwd("/Users/lancecundy/Documents/Nielsen")
setwd("Users/lancecundy/Documents/Nielsen")
getwd()
setwd("/Users/lancecundy/Documents/Research/Nielsen/EIS")
# Read in Dataset
estimationData <- read_csv('UseData/preliminary_iv_estimation_ne.csv')
head(estimationData)
source(file.path(base.path, "Code/dCGKL_2018_code/gmmq.R"))
base.path <- "/Users/lancecundy/Documents/Research/Nielsen/EIS"
source(file.path(base.path, "Code/dCGKL_2018_code/gmmq.R"))
base.path <- "/Users/lancecundy/Documents/Research/Nielsen/EIS"
source(file.path(base.path, "Code/dCGKL_2018_code/gmmq.R"))
base.path <- "/Users/lancecundy/Documents/Research/Nielsen/EIS"
# Source Kaplan code
source(file.path(base.path, "Code/dCGKL_2018_code/gmmq.R"))
# Read in Dataset
estimationDataFileName <- file.path(base.path, "UseData/preliminary_iv_estimation_ne.csv")
estimationData <- read_csv(estimationDataFileName)
view(estimationData)
depVar <- "X_TB"
eval(text=paste0("estimationData$",X_TB))
eval(text=paste0("estimationData$",depVar))
paste0("estimationData$",depVar)
eval(parse(text=paste0("estimationData$",depVar)))
rateVar <- "TB"
# Dependent Variable
D <- as.matrix(eval(parse(text=paste0("estimationData$X_",rateVar))))
D
# Instruments
Z1.formula <- paste0("Y~Z1+Z2_", rateVar, "Z3")
Z1.formula
# Instruments
Z1.formula <- paste0("Y~Z1+Z2_", rateVar, "+Z3")
Z.inst1<-lm(Z1.formula, data=estimationData)$fitted
Z2.formula <- paste0("X_",rateVar, "~Z1+Z2_", rateVar, "+Z3")
Z.inst2<-lm(Z2.formula, data=estimationData)$fitted
Z.inst2
Z2.formula <- as.formula(paste0("X_",rateVar, "~Z1+Z2_", rateVar, "+Z3"))
Z.inst2 <- lm(Z2.formula, data=estimationData)$fitted
# Instruments
Z1.formula <- as.formula(paste0("Y~Z1+Z2_", rateVar, "+Z3"))
# Pooled Panel to get starting point
PLM.formula <- as.formula(paste0("Y~X_", rateVar, " | Z1 + Z2_", rateVar, "+Z3"))
PLM.formula
PLM <- plm(PLM.formula, data=estimationData, model='pooling', index=c('HOUSEHOLD', 'DATE'))
library(plm)
PLM <- plm(PLM.formula, data=estimationData, model='pooling', index=c('HOUSEHOLD', 'DATE'))
summary(PLM)
rateVector <- c("TB", "SB")
min(estimaitonData$DATE)
min(estimationData$DATE)
max(estimationData$DATE)
unique(estimationData$DATE)
# We should revisit these splits
period <- c("ALL", "P1", "P2", "P3")
dateSplitStarts <- c(2004-01-26, 2004-01-26, 2006-08-07, 2009-01-05)
dateSplitEnds <- c(2016-11-28, 2006-07-31, 2008-12-29, 2016-11-28)
period
dateSplits <- cbind(period, dateSplitStarts, dateSplitEnds)
dateSplits
# We should revisit these splits
period <- c("ALL", "P1", "P2", "P3")
dateSplitStarts <- c("2004-01-26", "2004-01-26", "2006-08-07", "2009-01-05")
dateSplitEnds <- c("2016-11-28", "2006-07-31", "2008-12-29", "2016-11-28")
dateSplits <- cbind(period, dateSplitStarts, dateSplitEnds)
dateSplits
jj <- 1
timePeriod <- dataSplits[jj, "period"]
timePeriod <- dateSplits[jj, "period"]
timePeriod
file.path(base.path, paste0("Output/Phase2/QGMM_", timePeriod, "_NEsample"))
source('~/Documents/Research/Nielsen/EIS/Code/QGMM_Indexed.R', echo=TRUE)
length(Z.inst1)
length(Z.inst2)
Z.excl <- cbind(Z.inst1, Z.inst2)
Z.excl
ii
jj
source('~/Documents/Research/Nielsen/EIS/Code/QGMM_Indexed.R', echo=TRUE)
nrow(D)
nrow(Z.excl)
nrow(X.excl)
head(estimationData)
sum(is.na(estimationData$Y))
sum(is.na(estimationData$X_TB))
sum(is.na(estimationData$X_ST))
sum(is.na(estimationData$X_Z1))
sum(is.na(estimationData$Z1))
sum(is.na(estimationData$Z2_ST))
sum(is.na(estimationData$Z2_TB))
# There were some NAs in the first two rows of the data
estimationData <- estimationData[-2, ]
head(estimationData)
-2:-1
-1:-2
estimationData <- read_csv(estimationDataFileName)
# There were some NAs in the first two rows of the data
estimationData <- estimationData[-1:-1, ]
head(estimationData)
estimationData <- read_csv(estimationDataFileName)
# There were some NAs in the first two rows of the data
estimationData <- estimationData[-1:-2, ]
head(estimationData)
source('~/Documents/Research/Nielsen/EIS/Code/QGMM_Indexed.R', echo=TRUE)
str(QGMMResults)
QGMMResults <- as.data.frame(cbind(tau,coef.beta,coef.eis))
QGMMResults
colnames(QGMMResults) <- c("tau", "Beta", "EIS")
print(QGMMResults)
outputeFileName <- file.path(base.path, paste0("Output/Phase2/QGMM_", timePeriod, "_NEsample"))
write_csv(QGMMResults, outputeFileName)
outputeFileName <- file.path(base.path, paste0("Output/Phase2/QGMM_", timePeriod, "_NEsample.csv"))
write_csv(QGMMResults, outputeFileName)
StartingPointReg
ncol(X)
X
source('~/Documents/Research/Nielsen/EIS/Code/QGMM_Indexed.R', echo=TRUE)
source('~/Documents/Research/Nielsen/EIS/Code/QGMM_Indexed.R', echo=TRUE)
dateSplits
ii
jj
source('~/Documents/Research/Nielsen/EIS/Code/QGMM_Indexed.R', echo=TRUE)
ii <- 1
jj <- 1
rateVar <- rateTypes[ii]
timePeriod <- dateSplits[jj, "period"]
startDate <- dateSplits[jj, "dateSplitStarts"]
endDate <- dateSplits[jj, "dateSplitEnds"]
estimationDataSubset <- estimationData %>%
filter(DATE >= startDate & DATE <= endDate)
head(EstimationDataSubset)
estimationDataSubset
# Outcome Variable
Y <- as.matrix(estimationDataSubset$Y)
n <- nrow(Y)
# Columns of 1s (for intercept)
X.excl <- matrix(data=1, nrow=n, ncol=1)
# Dependent Variable
D <- as.matrix(eval(parse(text=paste0("estimationDataSubset$X_",rateVar))))
# Instruments
Z1.formula <- as.formula(paste0("Y~Z1+Z2_", rateVar, "+Z3"))
Z.inst1 <- lm(Z1.formula, data=estimationDataSubset)$fitted
Z2.formula <- as.formula(paste0("X_",rateVar, "~Z1+Z2_", rateVar, "+Z3"))
Z.inst2 <- lm(Z2.formula, data=estimationDataSubset)$fitted
# Combine Instruments
Z.excl <- cbind(Z.inst1, Z.inst2)
# Exogenous Variables
Z <- cbind(Z.excl, X.excl)
# All RHS variables
X <- cbind(D, X.excl)
# Pooled Panel to get starting point
PLM.formula <- as.formula(paste0("Y~X_", rateVar, " | Z1 + Z2_", rateVar, "+Z3"))
PLM <- plm(PLM.formula, data=estimationDataSubset, model='pooling', index=c('HOUSEHOLD', 'DATE'))
summary(PLM)
StartingPointReg <- c(PLM$coef[2], PLM$coef[1])
# conv.fn convert log-linear fn's (b[1],b[2])=(slope, constant) to (beta, gamma)
conv.fn <- function(b) c(exp(b[2]/b[1]), 1/b[1]) #convert log-linear parameters to (beta,gamma)
conv.inv.fn <- function(b) c(log(b[2])/b[1], 1/b[1])
# conv.fn convert log-linear fn's (b[1],b[2])=(slope, constant) to (beta, EIS)
conv2.fn <- function(b) c(exp(b[2]/b[1]), b[1]) #convert log-linear parameters to (beta,EIS)
conv2.inv.fn <- function(b) c(log(b[2])*b[1], b[1])
conv3.fn <- function(b) c(b[1],1/b[2]) # convert (beta,gamma) to (beta,EIS)
conv3.inv.fn <- function(b) c(b[1],1/b[2])
# Residual/Lambda functions (and derivatives) for smoothed MM estimation
Lfn.gmmq <- function(y,x,b) y[,1]-cbind(y[,-1],x)%*%b  #log-linear
Ldfn.gmmq <- function(y,x,b) -cbind(y[,-1],x)
Lfn2b.gmmq <- function(y,x,b) -Lfn.gmmq(y,x,b) #-y[,1]+cbind(x,y[,-1])%*%b #log-linear, 1-tau
Ldfn2b.gmmq <- function(y,x,b) -Ldfn.gmmq(y,x,b) #cbind(x,y[,-1])
Lfn2.gmmq <- function(y,x,b) b[1]*exp(y[,1])^(-b[2])*exp(y[,2]) - 1 #nonlinear (beta,gamma)
Ldfn2.gmmq <- function(y,x,b) cbind((Lfn2.gmmq(y=y,x=x,b=b)+1) / b[1],
-y[,1]*(Lfn2.gmmq(y=y,x=x,b=b)+1))
Lfn22.gmmq <- function(y,x,b) b[1]*exp(y[,1])^(-1/b[2])*exp(y[,2]) - 1 #nonlinear (beta,EIS)
Ldfn22.gmmq <- function(y,x,b) cbind((Lfn2.gmmq(y=y,x=x,b=b)+1) / b[1],
y[,1]*(Lfn2.gmmq(y=y,x=x,b=b)+1)/b[2]^2)
# Residual/Lambda functions (and derivatives) for smoothed GMM estimation
Lfn <- function(y,x,b) y-x%*%b  #log-linear
Ldfn <- function(y,x,b) -x
Lfn2b <- function(y,x,b) -Lfn(y,x,b) #-y+x%*%b #log-linear, 1-tau
Ldfn2b <- function(y,x,b) -Ldfn(y,x,b) #x
Lfn2 <- function(y,x,b) b[1]*exp(y)^(-b[2])*exp(x[,1]) - 1 #nonlinear (beta,gamma)
Ldfn2 <- function(y,x,b) cbind((Lfn2(y=y,x=x,b=b)+1) / b[1],
-y*(Lfn2(y=y,x=x,b=b)+1))
Lfn22 <- function(y,x,b) b[1]*exp(y)^(-1/b[2])*exp(x[,1]) - 1 #nonlinear (beta,gamma)
Ldfn22 <- function(y,x,b) cbind((Lfn2(y=y,x=x,b=b)+1) / b[1],
y*(Lfn2(y=y,x=x,b=b)+1)/b[2]^2)
# Initialize  Variables
dimX <- ncol(X)
tau<-seq(0.1,0.9,0.1)
nt<-length(tau)
coef.beta<-array(0,dim=c(nt,1))
coef.eis<-array(0,dim=c(nt,1))
Y
X
Z
h.HUGE <- 0.0001
tau<-seq(0.1,0.9,0.1)
nt<-length(tau)
coef.beta<-array(0,dim=c(nt,1))
coef.eis<-array(0,dim=c(nt,1))
for (i in 1:nt){
print(tau[i])
# GMMQ Function
ret2b <- tryCatch(gmmq(tau=tau[i], dB=dimX, Y=cbind(Y,D), X=X.excl, Z.excl=Z.excl,
Lambda=Lfn2b.gmmq, Lambda.derivative=Ldfn2b.gmmq,
h=H.HUGE, VERBOSE=FALSE, RETURN.Z=FALSE, b.init=StartingPointReg),
error=function(w)list(b=c(NA,NA),h=NA))
# Get Coefficients
coef.beta[i]<-conv2.fn(ret2b$b)[1]
coef.eis[i]<-conv2.fn(ret2b$b)[2]
}
QGMMResults <- as.data.frame(cbind(tau,coef.beta,coef.eis))
colnames(QGMMResults) <- c("tau", "Beta", "EIS")
print(QGMMResults)
ret2b
Y
D
X
Z
tau
ret2b
tau
tau[i]
dimX
cbind(Y,D)
X.excl
X.excl
Lfn2b.gmmq()
Lambda=Lfn2b.gmmq
Lambda.derivative=Ldfn2b.gmmq
h=H.HUGE
source('~/Documents/Research/Nielsen/EIS/Code/QGMM_Indexed.R', echo=TRUE)
source('~/Documents/Research/Nielsen/EIS/Code/QGMM_Indexed.R', echo=TRUE)
source('~/Documents/Research/Nielsen/EIS/Code/QGMM_Indexed.R', echo=TRUE)
nrow(EstimationData)
nrow(estimationData)
source('~/Documents/Research/Nielsen/EIS/Code/QGMM_Indexed.R', echo=TRUE)
estimationData
log(1+0.05)
rates <- estimationData %>%
select(DATE, X_TB) %>%
distinct()
rates <- estimationDataSubset %>%
select(DATE, X_TB) %>%
distinct()
library(tidyverse)
rates <- estimationDataSubset %>%
select(DATE, X_TB) %>%
distinct()
colnames(estimationDataSubset)
rates <- estimationDataSubset %>%
dplyr::select(DATE, X_TB) %>%
distinct()
rates
plot(rates)
ggplot(rates, aes(x=DATE, y=X_TB)) +
geom_line()
rates <- estimationDataSubset %>%
dplyr::select(DATE, X_TB, Y_TB) %>%
distinct()
rates <- estimationDataSubset %>%
dplyr::select(DATE, X_TB, X_ST) %>%
distinct()
ggplot(rates, aes(x=DATE, y=X_TB)) +
geom_line()
ggplot(rates, aes(x=DATE, y=X_ST)) +
geom_line()
consumption <- estimationDataSubset %>%
dplyr::select(DATE, Y) %>%
group_by(DATE) %>%
summarise(Y = mean(Y)) %>%
ungroup()
ggplot(consumption, aes(x=DATE, y=Y)) +
geom_line()
ggplot(rates, aes(x=DATE, y=X_TB)) +
geom_line()
ggplot(rates, aes(x=DATE, y=X_ST)) +
geom_line()
ggplot(consumption, aes(x=DATE, y=Y)) +
geom_line()
ggplot(rates, aes(x=DATE, y=X_TB)) +
geom_line()
ggplot(rates, aes(x=DATE, y=X_ST)) +
geom_line()
ggplot(consumption, aes(x=DATE, y=Y)) +
geom_line()
ggplot(rates, aes(x=DATE, y=X_TB)) +
geom_line()
ggplot(rates, aes(x=DATE, y=X_ST)) +
geom_line()
ggplot(consumption, aes(x=DATE, y=Y)) +
geom_line()
allDate <- consumption %>%
left_join(rates, by="DATE")
allData <- consumption %>%
left_join(rates, by="DATE")
allData <- scale(allData)
allData <- consumption %>%
left_join(rates, by="DATE")
allData[,2:4] <- scale(allData[,2:4])
allData
allData <- allData %>% gather(Key, Scale, Y, X_TB, X_ST)
allData
allData <- consumption %>%
left_join(rates, by="DATE")
allData[,2:4] <- scale(allData[,2:4])
allData <- allData %>% gather(Key, Amount, Y, X_TB, X_ST)
allData <- consumption %>%
left_join(rates, by="DATE")
allData[,2:4] <- scale(allData[,2:4])
allData <- allData %>% gather(Key, Amount, Y, X_TB, X_ST)
ggplot(allData) +
geom_line(allData, aes(x=DATE, y=Scale, group=Amount))
str(allData)
ggplot() +
geom_line(allData, aes(x=DATE, y=Scale, group=Amount))
ggplot() +
geom_line(allData, aes(x=DATE, y=Amount, group=Key))
ggplot() +
geom_line(allData, aes(x=DATE, y=Amount, group=Key))
str(allData)
ggplot() +
geom_line(allData, aes(x=DATE, y=Amount), group=Key)
allData
ggplot() +
geom_line(allData, aes(x=DATE, y=Amount), group=Key)
head(allData)
ggplot() +
geom_line(allData, aes(x=DATE, y=Amount), group=Key)
ggplot() +
geom_line(allData, aes(x=DATE, y=Amount), color=Key)
ggplot() +
ggplot() +
geom_line(allData, aes(x=DATE, y=Amount, group=Key))
str(allData)
distinct(allData$Key)
unique(allData$Key)
allData <- allData %>%
gather(Key, Amount, Y, X_TB, X_ST) %>%
mutate(Key = as.factor(as.character(Key)))
allData <- consumption %>%
left_join(rates, by="DATE")
allData[,2:4] <- scale(allData[,2:4])
allData <- allData %>%
gather(Key, Amount, Y, X_TB, X_ST) %>%
mutate(Key = as.factor(as.character(Key)))
ggplot() +
geom_line(allData, aes(x=DATE, y=Amount, group=Key))
str(allData)
ggplot(allData) +
geom_line(aes(x=DATE, y=Amount, group=Key))
ggplot(allData) +
geom_line(aes(x=DATE, y=Amount), group=Key)
ggplot(allData) +
geom_line(aes(x=DATE, y=Amount), group=Key)
ggplot(allData) +
geom_line(aes(x=DATE, y=Amount, group=Key), color=Key)
ggplot(allData) +
geom_line(aes(x=DATE, y=Amount, group=Key), color=Key)
head(allData)
ggplot(allData) +
geom_line(aes(x=DATE, y=Amount, group=Key))
ggplot(allData) +
geom_line(aes(x=DATE, y=Amount, color=Key))
allData <- allData %>%
gather(Key, Amount, Y, X_TB, X_ST) %>%
mutate(Key = as.factor(as.character(Key))) %>%
filter(Key %in% c("Y, X_TB"))
ggplot(allData) +
geom_line(aes(x=DATE, y=Amount, color=Key))
allData <- consumption %>%
left_join(rates, by="DATE")
allData[,2:4] <- scale(allData[,2:4])
allData <- allData %>%
gather(Key, Amount, Y, X_TB, X_ST) %>%
mutate(Key = as.factor(as.character(Key))) %>%
filter(Key %in% c("Y, X_TB"))
ggplot(allData) +
geom_line(aes(x=DATE, y=Amount, color=Key))
allData <- consumption %>%
left_join(rates, by="DATE")
allData[,2:4] <- scale(allData[,2:4])
allData <- allData %>%
gather(Key, Amount, Y, X_TB, X_ST) %>%
mutate(Key = as.factor(as.character(Key))) %>%
filter(Key %in% c("Y", "X_TB"))
ggplot(allData) +
geom_line(aes(x=DATE, y=Amount, color=Key))
estimationDataFileName <- file.path(base.path, "UseData/data_1week_sample05_ne_20200427.csv")
estimationData <- read_csv(estimationDataFileName)
# There were some NAs in the first two rows of the data
estimationData <- estimationData[-1:-2, ]
rates <- estimationDataSubset %>%
dplyr::select(DATE, X_TB, X_ST) %>%
distinct()
consumption <- estimationDataSubset %>%
dplyr::select(DATE, Y) %>%
group_by(DATE) %>%
summarise(Y = mean(Y)) %>%
ungroup()
ggplot(rates, aes(x=DATE, y=X_TB)) +
geom_line()
ggplot(rates, aes(x=DATE, y=X_ST)) +
geom_line()
ggplot(consumption, aes(x=DATE, y=Y)) +
geom_line()
allData <- consumption %>%
left_join(rates, by="DATE")
allData[,2:4] <- scale(allData[,2:4])
allData <- allData %>%
gather(Key, Amount, Y, X_TB, X_ST) %>%
mutate(Key = as.factor(as.character(Key))) %>%
filter(Key %in% c("Y", "X_TB"))
ggplot(allData) +
geom_line(aes(x=DATE, y=Amount, color=Key)) +
ggtitle("Weekly")
estimationDataFileName <- file.path(base.path, "UseData/data_1month_sample05_ne_20200427.csv")
estimationData <- read_csv(estimationDataFileName)
head(estimationData)
rates <- estimationDataSubset %>%
dplyr::select(DATE, X_TB, X_ST) %>%
distinct()
consumption <- estimationDataSubset %>%
dplyr::select(DATE, Y) %>%
group_by(DATE) %>%
summarise(Y = mean(Y)) %>%
ungroup()
ggplot(rates, aes(x=DATE, y=X_TB)) +
geom_line()
ggplot(rates, aes(x=DATE, y=X_ST)) +
geom_line()
ggplot(consumption, aes(x=DATE, y=Y)) +
geom_line()
allData <- consumption %>%
left_join(rates, by="DATE")
allData[,2:4] <- scale(allData[,2:4])
allData <- allData %>%
gather(Key, Amount, Y, X_TB, X_ST) %>%
mutate(Key = as.factor(as.character(Key))) %>%
filter(Key %in% c("Y", "X_TB"))
ggplot(allData) +
geom_line(aes(x=DATE, y=Amount, color=Key)) +
ggtitle("Monthly")
estimationDataFileName <- file.path(base.path, "UseData/data_1week_sample05_ne_20200427.csv")
estimationData <- read_csv(estimationDataFileName)
# There were some NAs in the first two rows of the data
estimationData <- estimationData[-1:-2, ]
rates <- estimationDataSubset %>%
dplyr::select(DATE, X_TB, X_ST) %>%
distinct()
consumption <- estimationDataSubset %>%
dplyr::select(DATE, Y) %>%
group_by(DATE) %>%
summarise(Y = mean(Y)) %>%
ungroup()
allData <- consumption %>%
left_join(rates, by="DATE")
allData[,2:4] <- scale(allData[,2:4])
allData <- allData %>%
gather(Key, Amount, Y, X_TB, X_ST) %>%
mutate(Key = as.factor(as.character(Key))) %>%
filter(Key %in% c("Y", "X_TB"))
ggplot(allData) +
geom_line(aes(x=DATE, y=Amount, color=Key)) +
ggtitle("Weekly")
estimationDataFileName <- file.path(base.path, "UseData/data_1month_sample05_ne_20200427.csv")
estimationData <- read_csv(estimationDataFileName)
# There were some NAs in the first two rows of the data
#estimationData <- estimationData[-1:-2, ]
rates <- estimationDataSubset %>%
dplyr::select(DATE, X_TB, X_ST) %>%
distinct()
consumption <- estimationDataSubset %>%
dplyr::select(DATE, Y) %>%
group_by(DATE) %>%
summarise(Y = mean(Y)) %>%
ungroup()
allData <- consumption %>%
left_join(rates, by="DATE")
allData[,2:4] <- scale(allData[,2:4])
allData <- allData %>%
gather(Key, Amount, Y, X_TB, X_ST) %>%
mutate(Key = as.factor(as.character(Key))) %>%
filter(Key %in% c("Y", "X_TB"))
ggplot(allData) +
geom_line(aes(x=DATE, y=Amount, color=Key)) +
ggtitle("Monthly")
